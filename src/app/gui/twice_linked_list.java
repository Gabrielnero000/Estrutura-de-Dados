/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.gui;

import app.nodes.SimpleNode;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author gabri
 */
public class twice_linked_list extends javax.swing.JPanel {

    /**
     * Creates new form Lists
     */
    public twice_linked_list() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        workspace = new javax.swing.JDesktopPane();
        main_panel = new javax.swing.JPanel();
        add_button = new javax.swing.JButton();
        value_area_1 = new javax.swing.JTextField();
        position_area_1 = new javax.swing.JTextField();
        value_text_1 = new javax.swing.JLabel();
        position_text_1 = new javax.swing.JLabel();
        separator_1 = new javax.swing.JLabel();
        remove_button = new javax.swing.JButton();
        value_area_2 = new javax.swing.JTextField();
        separator_2 = new javax.swing.JLabel();
        get_button = new javax.swing.JButton();
        bar = new javax.swing.JLabel();
        head_info = new javax.swing.JLabel();
        size_info = new javax.swing.JLabel();
        head_text = new javax.swing.JLabel();
        size_text = new javax.swing.JLabel();
        operator = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(898, 720));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        main_panel.setBackground(new java.awt.Color(255, 255, 255));

        add_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/add_icon.png"))); // NOI18N
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        value_area_1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        value_area_1.setForeground(new java.awt.Color(163, 73, 164));

        position_area_1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        position_area_1.setForeground(new java.awt.Color(163, 73, 164));
        position_area_1.setToolTipText("");

        value_text_1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        value_text_1.setForeground(new java.awt.Color(163, 73, 164));
        value_text_1.setText("Valor:");

        position_text_1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        position_text_1.setForeground(new java.awt.Color(163, 73, 164));
        position_text_1.setText("Posição:");

        separator_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/vertical_bar.png"))); // NOI18N

        remove_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/remove_icon.png"))); // NOI18N
        remove_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remove_buttonActionPerformed(evt);
            }
        });

        value_area_2.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        value_area_2.setForeground(new java.awt.Color(163, 73, 164));

        separator_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/vertical_bar.png"))); // NOI18N

        get_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/get_icon.png"))); // NOI18N

        bar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/bar.png"))); // NOI18N

        head_info.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        head_info.setForeground(new java.awt.Color(163, 73, 164));
        head_info.setText("N");

        size_info.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        size_info.setForeground(new java.awt.Color(163, 73, 164));
        size_info.setText("0");

        head_text.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        head_text.setForeground(new java.awt.Color(163, 73, 164));
        head_text.setText("Cabeça:");

        size_text.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        size_text.setForeground(new java.awt.Color(163, 73, 164));
        size_text.setText("Tamanho:");

        operator.setBackground(new java.awt.Color(163, 73, 164));
        operator.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        operator.setForeground(new java.awt.Color(163, 73, 164));
        operator.setText("Posição:");
        operator.setContentAreaFilled(false);
        operator.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        operator.setMaximumSize(new java.awt.Dimension(70, 27));
        operator.setMinimumSize(new java.awt.Dimension(70, 27));
        operator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operatorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout main_panelLayout = new javax.swing.GroupLayout(main_panel);
        main_panel.setLayout(main_panelLayout);
        main_panelLayout.setHorizontalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_panelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(position_text_1)
                            .addComponent(value_text_1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(value_area_1)
                            .addComponent(position_area_1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(separator_1)
                        .addGap(18, 18, 18)
                        .addComponent(remove_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(operator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(value_area_2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(separator_2)
                        .addGap(18, 18, 18)
                        .addComponent(get_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addComponent(head_text)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(head_info))
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addComponent(size_text)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(size_info)))))
                .addGap(59, 59, 59))
        );
        main_panelLayout.setVerticalGroup(
            main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_panelLayout.createSequentialGroup()
                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(operator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(value_area_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(main_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(main_panelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(size_text)
                                    .addComponent(size_info))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(head_text)
                                    .addComponent(head_info)))
                            .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(get_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(separator_2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(main_panelLayout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(value_area_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(value_text_1))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(main_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(position_area_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(position_text_1)))
                                    .addComponent(separator_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(remove_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(23, 23, 23)
                .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(554, Short.MAX_VALUE))
        );

        workspace.setLayer(main_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout workspaceLayout = new javax.swing.GroupLayout(workspace);
        workspace.setLayout(workspaceLayout);
        workspaceLayout.setHorizontalGroup(
            workspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        workspaceLayout.setVerticalGroup(
            workspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workspaceLayout.createSequentialGroup()
                .addComponent(main_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(workspace, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(workspace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void operatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operatorActionPerformed
        if (operator.getText().equals("Posição:")) {
            operator.setText("Valor:");
        } else {
            operator.setText("Posição:");
        }
    }//GEN-LAST:event_operatorActionPerformed

    private void remove_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remove_buttonActionPerformed
        if (size == 0) {
            JOptionPane.showMessageDialog(null, "Lista Vazia!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (value_area_2.getText().equals("")) {
            deleteEnd();
        } else if (!(value_area_2.getText().equals("")) && operator.getText().equals("Posição:")) {
            deletePosition(Integer.parseInt(value_area_2.getText()));
        } else if (!(value_area_2.getText().equals("")) && operator.getText().equals("Valor:")) {
            deleteValue(value_area_2.getText());
        }
    }//GEN-LAST:event_remove_buttonActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
        if (size == 23) {
            JOptionPane.showMessageDialog(null, "Lista cheia!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (value_area_1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo de Valor não pode ficar vazio!", "Erro", JOptionPane.ERROR_MESSAGE);
        } else if (position_area_1.getText().equals("") && !(value_area_1.getText().equals(""))) {
            addEnd(value_area_1.getText());
        } else if (!(position_area_1.getText().equals("")) && !(value_area_1.getText().equals(""))) {
            addInPosition(value_area_1.getText(), Integer.parseInt(position_area_1.getText()));
        }
    }//GEN-LAST:event_add_buttonActionPerformed

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        reset();
    }//GEN-LAST:event_formFocusLost

    public void reset() {
        removeAll();
        revalidate();
        repaint();
        X = 50;
        Y = 170;
        size = 0;
        head = null;
        limit = false;
        control = 0;
        labels = -1;
        elements = new JLabel[23];
    }

    public void change() {
        if (limit) {
            Y += 150;
            control++;
        } else {
            if (control % 2 == 0) {
                X += 150;
            } else {
                X -= 150;
            }
        }
    }

    public void unchange() {
        if (limit) {
            Y -= 150;
            control--;
        } else {
            if (control % 2 == 0) {
                X -= 150;
            } else {
                X += 150;
            }
        }
    }

    public JLabel linkNodes() {
        JPanel arrow_panel = new JPanel();
        JLabel arrow = new JLabel();
        if (limit) {
            arrow.setSize(25, 100);
            arrow.setIcon(new ImageIcon(getClass().getResource(DOWN_ARROW)));
            arrow.setLocation(0, 0);
            arrow_panel.setSize(25, 110);
            arrow_panel.setBackground(Color.white);
            arrow_panel.add(arrow);
            arrow_panel.setLocation(X + 10, Y - 110);
            workspace.add(arrow_panel);
            arrow_panel.setVisible(true);
            return arrow;
        }
        if (control == 0 || control == 2) {
            arrow.setSize(100, 25);
            arrow.setIcon(new ImageIcon(getClass().getResource(FRONT_ARROW)));
            arrow.setLocation(0, 0);
            arrow_panel.setSize(100, 25);
            arrow_panel.setBackground(Color.white);
            arrow_panel.add(arrow);
            arrow_panel.setLocation(X - 100, Y + 10);
            workspace.add(arrow_panel);
            arrow_panel.setVisible(true);
        }
        if (control == 1 || control == 3) {
            arrow.setSize(100, 25);
            arrow.setIcon(new ImageIcon(getClass().getResource(BACK_ARROW)));
            arrow.setLocation(0, 0);
            arrow_panel.setSize(100, 25);
            arrow_panel.setBackground(Color.white);
            arrow_panel.add(arrow);
            arrow_panel.setLocation(X + 50, Y + 10);
            workspace.add(arrow_panel);
            arrow_panel.setVisible(true);
        }
        return arrow;
    }

    public void addEnd(String value) {
        try {
            limit = size == 5 || size == 11 || size == 17;
            SimpleNode node = new SimpleNode(value_area_1.getText());
            SimpleNode node2 = new SimpleNode("N");
            node.setSize(50, 40);
            node.setLocation(X, Y);
            change();
            node2.setSize(50, 40);
            node2.setLocation(X, Y);
            workspace.add(node);
            node.setVisible(true);
            workspace.add(node2);
            node2.setVisible(true);
            elements[++labels] = linkNodes();
            color = node2.getBackground();
            if (size == 0) {
                head = node;
                head.setNextNode(node2);
                head.setBackground(Color.red);
                head.getNextNode().setBackground(Color.red);
                head_info.setText(head.getValue());
            } else {
                SimpleNode aux = head;
                for (int i = 1; i < size; i++) {
                    aux = aux.getNextNode();
                    aux.setBackground(node2.getBackground());
                }
                aux.setNextNode(node);
                node.setNextNode(node2);
                node.setBackground(Color.red);
            }
            size++;
            size_info.setText("" + size);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void addInPosition(String value, int pos) {
        if (pos == 1) {
            limit = size == 5 || size == 11 || size == 17;
            SimpleNode aux_node = head;
            String aux1 = head.getValue();
            String aux2 = "";
            change();
            head.setValue(value);
            for (int i = 0; i < size; i++) {
                aux_node = aux_node.getNextNode();
                aux2 = aux_node.getValue();
                aux_node.setValue(aux1);
                aux1 = aux2;
            }
            SimpleNode node2 = new SimpleNode("N");
            node2.setSize(50, 40);
            node2.setLocation(X, Y);
            workspace.add(node2);
            node2.setVisible(true);
            aux_node.setNextNode(node2);
            elements[++labels] = linkNodes();
            size++;
            size_info.setText("" + size);
            return;
        }
        if (pos > size || pos < 1) {
            JOptionPane.showMessageDialog(null, "Posição Invalida!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (pos == size) {
            addEnd(value);
        } else {
            limit = size == 5 || size == 11 || size == 17;
            SimpleNode aux = head;
            String aux2 = "", aux3 = "";
            for (int i = 0; i < pos - 1; i++) {
                aux = aux.getNextNode();
            }
            aux2 = aux.getValue();
            aux.setValue(value);
            change();
            for (int i = pos - 1; i < size; i++) {
                aux = aux.getNextNode();
                aux3 = aux.getValue();
                aux.setValue(aux2);
                aux2 = aux3;
            }
            SimpleNode node2 = new SimpleNode("N");
            node2.setSize(50, 40);
            node2.setLocation(X, Y);
            workspace.add(node2);
            node2.setVisible(true);
            aux.setNextNode(node2);
            elements[++labels] = linkNodes();
            size++;
            size_info.setText("" + size);
        }
    }

    public void deleteEnd() {
        if (size == 1) {
            head.getNextNode().setBackground(Color.white);
            head.setBackground(Color.white);
            head = null;
            elements[labels--].setIcon(null);
            size--;
            size_info.setText("" + size);
            head_info.setText("N");
            X = 50;
            Y = 170;
            return;
        }
        SimpleNode aux = head;
        SimpleNode aux2 = null;
        for (int i = 1; i < size; i++) {
            aux = aux.getNextNode();
            if (i == size - 2) {
                aux2 = aux;
            }
        }
        aux.getNextNode().setBackground(Color.white);
        aux.setValue("N");
        if (aux2 == null) {
            aux.setBackground(color);
        } else {
            aux.setBackground(aux2.getBackground());
            aux2.setBackground(Color.red);
        }
        elements[labels--].setIcon(null);
        size--;
        size_info.setText("" + size);
        limit = size == 5 || size == 11 || size == 17;
        unchange();
    }

    public void deletePosition(int pos) {
        if (pos > size || pos < 1) {
            JOptionPane.showMessageDialog(null, "Posição Invalida!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (pos == size) {
            deleteEnd();
        } else {
            SimpleNode aux = head;
            SimpleNode aux2 = null;
            for (int i = 1; i <= size; i++) {
                if (i == size - 2) {
                    aux2 = aux;
                }
                if (i == pos) {
                    break;
                }
                aux = aux.getNextNode();
            }
            for (int i = pos; i <= size; i++) {
                if (i == size - 2) {
                    aux2 = aux;
                }
                aux.setBackground(color);
                aux.setValue(aux.getNextNode().getValue());
                aux = aux.getNextNode();
            }
            aux.setBackground(Color.white);
            aux.setValue("N");
            aux2.getNextNode().setBackground(Color.red);
            elements[labels--].setIcon(null);
            size--;
            size_info.setText("" + size);
            limit = size == 5 || size == 11 || size == 17;
            unchange();
            head_info.setText(head.getValue());
        }
    }

    public void deleteValue(String value) {
        SimpleNode aux = head;
        for (int i = 1; i <= size; i++) {
            if (Integer.parseInt(aux.getValue()) == Integer.parseInt(value)) {
                deletePosition(i);
                return;
            }
            aux = aux.getNextNode();
        }
        JOptionPane.showMessageDialog(null, "Valor não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
    }

    private int X = 50;
    private int Y = 170;
    private int size = 0;
    private SimpleNode head;
    private static final String FRONT_ARROW = "/app/images/double_arrow_front.png";
    private static final String DOWN_ARROW = "/app/images/double_arrow_down.png";
    private static final String BACK_ARROW = "/app/images/double_arrow_front.png";
    private boolean limit = false;
    private int control = 0;
    private int labels = -1;
    private JLabel[] elements = new JLabel[23];
    private Color color;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.JLabel bar;
    private javax.swing.JButton get_button;
    private javax.swing.JLabel head_info;
    private javax.swing.JLabel head_text;
    private javax.swing.JPanel main_panel;
    private javax.swing.JButton operator;
    private javax.swing.JTextField position_area_1;
    private javax.swing.JLabel position_text_1;
    private javax.swing.JButton remove_button;
    private javax.swing.JLabel separator_1;
    private javax.swing.JLabel separator_2;
    private javax.swing.JLabel size_info;
    private javax.swing.JLabel size_text;
    private javax.swing.JTextField value_area_1;
    private javax.swing.JTextField value_area_2;
    private javax.swing.JLabel value_text_1;
    private javax.swing.JDesktopPane workspace;
    // End of variables declaration//GEN-END:variables
}
